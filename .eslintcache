[{"C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\index.js":"1","C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\App.js":"2","C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\reportWebVitals.js":"3","C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\Card\\Card.jsx":"4","C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\DrawButton\\DrawButton.jsx":"5","C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\Config\\Firebase\\db_config.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":6350,"mtime":1609773536915,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":823,"mtime":1610384777074,"results":"11","hashOfConfig":"8"},{"size":507,"mtime":1609617628671,"results":"12","hashOfConfig":"8"},{"size":357,"mtime":1609522426314,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"yz5xkn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\index.js",[],["28","29"],"C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\App.js",["30"],"//import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Card from './Card/Card';\nimport DrawButton from \"./DrawButton/DrawButton\";\nimport firebase from 'firebase/app';\n//import MetaTags from 'react-meta-tags';\nimport 'firebase/database';\nimport Container from \"react-bootstrap/Container\";\n\nimport { DB_CONFIG } from './Config/Firebase/db_config';\n\n//give heroku access to db without it going on github\n\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    if (!firebase.apps.length) {\n       this.app = firebase.initializeApp(DB_CONFIG);\n    } else {\n       this.app = firebase.app(); // if already initialized, use that one\n    }\n    \n    this.database = this.app.database().ref().child('spanish ex');\n\n    this.updateCard = this.updateCard.bind(this);\n    \n    this.state = {\n        cardList: [],\n        currentCard: {},\n        topic: \"\",\n        numCards: 30,\n        hints:[],\n        currentIndex:0,\n        topicList: [],\n        main:0\n    }\n  }\n  \n  componentWillMount(){\n    this.database.once('value').then((snapshot) => {\n      let tempArray = [];\n      snapshot.val().map((item) => tempArray.push(item['list'])); \n      this.setState({\n        topicList: [...new Set(tempArray)] \n      })\n  })\n    console.log(this.state);\n  }\n  \n  getRandomCard(currentCards){\n    var card = currentCards[Math.floor(Math.random() * currentCards.length)];\n    return card;\n  }\n  \n  updateCard(){\n    const currentCards = this.state.cardList;\n    this.setState({\n      currentCard: this.getRandomCard(currentCards)\n    })\n  }\n  \n  //center the top buttons\n  //center the bottom button\n  //card not go around\n  //click first letter -  first letter appears above word\n  //click written word - replaced by whole word\n  //click word audio - plays sound\n  flashCards() {\n    return (\n      <div className=\"main\">\n        <div className=\"container\">\n        \n          <div className=\"row\">  \n\n            <div className=\"hintBtn\">\n              <button className=\"btn\" onClick={this.drawCard}>First Letter</button>\n            </div>\n            <div className=\"hintBtn\">\n              <button className=\"btn\" onClick={this.drawCard}>Written Word</button>\n            </div>\n            <div className=\"hintBtn\">\n              <button className=\"btn\" onClick={this.drawCard}>Word Audio</button>\n            </div>\n          </div>\n          \n          <div className=\"row\">        \n            <div className=\"cardRow\">\n              <Card eng={this.state.currentCard.english} \n                    ara={this.state.currentCard.spanish} \n                    />\n            </div>\n          </div>\n            \n          <div className=\"row\">        \n              <DrawButton drawCard={this.updateCard}/>\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n  \n  goToFlashCards(){\n    console.log(this.state);\n    console.log(this.state.cardList);\n    if(!this.state.topic){\n        console.log(2);\n        return;//topic not chosen\n    }\n    if(!(this.state.numCards>0)){\n        console.log(3);\n        return;//invalid card number\n    }\n    this.setState({cardList:[]});\n    \n    //get the words in that topic and pic numCards of them or all of them. Have note at top first to okay or not.\n    this.database.orderByChild('list').equalTo(this.state.topic)\n      .once(\"value\", function(querySnapshot) {\n        let tempArray = []\n        querySnapshot.forEach(function(doc) {\n            console.log(doc.val());\n            tempArray.push(doc.val());\n        });\n        let tempArray2 = shuffleArray(tempArray);\n        console.log(this.state);\n        let numCards=this.state.numCards;\n        this.setState({ cardList: tempArray2.slice(0,numCards), main:1},\n         () => {this.updateCard()});\n    }.bind(this));\n  }\n  \n  chooseListAndNumber(){\n    console.log(this.state.topic);\n    return (\n      <div className=\"chooseListAndNumber\">  \n      \n        <h3> Word Cards </h3>\n\n          <div className=\"topicButtonGroup\">\n            <div> Which topic would you like to use?  </div>\n          \n            <div className=\"btn-group-vertical indent\">\n              {this.state.topicList.map((topic)=> { \n                return( <input type=\"button\" className = {this.state.topic === topic ? \"item chosen btn\" : \"item btn\"} key={topic} onClick={()=>this.setState({topic}) } value={topic}/>)\n              })}\n            </div>       \n          </div>  \n          \n          <br />\n\n          <div> How many words would you like to choose? </div>\n            <input name=\"numCards\" type=\"number\" value={this.state.numCards} onChange={(event)=>this.setState({numCards:event.target.value})} className=\"indent\"/>\n\n          <div className=\"button center\">\n                    <br />\n              <input type=\"button\" className=\"btn\" onClick={()=>this.goToFlashCards()} value= \"Go to words\"/>\n\n          </div>\n\n      </div>\n\n    );\n  }\n  \n  \n  render() {\n      console.log(this.state.main);\n\n    return (\n    <div className=\"h100\">\n\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n      <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"/>\n      <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\"/>\n      <script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\n      <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\n      \n          {this.state.main? this.flashCards(): this.chooseListAndNumber()}\n          \n    </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\reportWebVitals.js",[],"C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\Card\\Card.jsx",[],"C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\DrawButton\\DrawButton.jsx",[],"C:\\Users\\amnae\\Desktop\\naming-therapy\\src\\Config\\Firebase\\db_config.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":9,"column":8,"nodeType":"37","messageId":"38","endLine":9,"endColumn":17},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]